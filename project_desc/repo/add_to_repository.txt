file name: server/src/services/gameManager.ts
classname: GameManager
function name: declareMoves
short description: Modified to start the declaration timer only after the first player makes a declaration.
input / output: (No change in signature)

file name: src/types/game.ts
classname: N/A
function name: GamePhase (type)
short description: Aligned GamePhase enum with server definition ('playing' -> 'solution', removed 'completed').
input / output: N/A

file name: src/pages/GamePage.tsx
classname: N/A
function name: GamePage (component)
short description: Updated references from GamePhase 'playing' to 'solution'.
input / output: N/A

file name: src/types/socket.ts
classname: N/A
function name: ClientToServerEvents (interface)
short description: Added playerId to declareMoves and drawCard event payloads.
input / output: N/A

file name: src/services/socketService.ts
classname: SocketService
function name: declareMoves
short description: Added playerId parameter and included it in the emitted payload.
input / output: Input: roomId: string, playerId: string, moves: number / Output: void

file name: src/services/socketService.ts
classname: SocketService
function name: drawCard
short description: Added playerId parameter and included it in the emitted payload.
input / output: Input: roomId: string, playerId: string / Output: void

file name: src/stores/gameStore.ts
classname: N/A
function name: declareMoves (action)
short description: Passed currentPlayer.id to socketService.declareMoves.
input / output: Input: moves: number / Output: void

file name: src/stores/gameStore.ts
classname: N/A
function name: drawCard (action)
short description: Passed currentPlayer.id to socketService.drawCard.
input / output: Input: None / Output: void

file name: src/stores/gameStore.ts
classname: N/A
function name: (connect - onRoomJoined/onRoomUpdated listeners)
short description: Improved currentPlayer update logic to handle null state and prioritize server info.
input / output: N/A

file name: src/stores/gameStore.ts
classname: N/A
function name: moveRobot (action)
short description: Enabled the emission of the 'moveRobot' event by uncommenting the socketService.moveRobot call.
input / output: Input: robotColor: RobotColor, path: Position[] / Output: void

file name: server/src/server.ts
classname: N/A
function name: (socket event listener)
short description: Added 'moveRobot' event handler to receive robot movement data from clients and call GameManager.moveRobot. Imported RobotColor enum for type casting.
input / output: Event payload: { roomId: string, robotColor: string, path: Position[] }

file name: server/src/services/gameManager.ts
classname: GameManager
function name: moveRobot
short description: Modified to accept 'path' instead of 'positions'. Implemented robot position update based on the end of the path, path length validation against declared moves, move history recording, goal checking, and game state emission. Changed move count validation to fail the solution attempt instead of throwing an error. Implemented correct move counting based on number of moveRobot calls per attempt.
input / output: Input: playerId: string, robotColor: RobotColor, path: Position[] / Output: void

file name: server/src/services/gameManager.ts
classname: GameManager
function name: checkGoal
short description: Implemented actual goal checking logic based on currentCard and robotPositions. Fixed Vortex card key generation to match targetPositions definition in roomManager. Added targetPositions property to GameManager.
input / output: Input: None / Output: boolean

file name: server/src/types/game.ts
classname: N/A
function name: MultiplayerGameState (interface)
short description: Added 'currentAttemptMoves' property to track moves within a single solution attempt.
input / output: N/A

file name: server/src/services/gameManager.ts
classname: GameManager
function name: initializeGameState
short description: Initialized the new 'currentAttemptMoves' property to 0.
input / output: N/A

file name: server/src/services/gameManager.ts
classname: GameManager
function name: startSolutionPhase
short description: Reset the 'currentAttemptMoves' property to 0 when a new solution phase starts.
input / output: N/A

file name: src/components/GameBoard/Robot.tsx
classname: Robot
function name: getPositionStyle
short description: Removed CSS transition style as animation is now handled in GamePage.
input / output: N/A

file name: src/pages/GamePage.tsx
classname: N/A
function name: GamePage (component)
short description: Implemented multiplayer robot movement animation using useState, useRef, useEffect, and requestAnimationFrame, referencing single-player logic. Manages displayedBoard and movingRobots states for smooth animation based on server updates.
input / output: N/A

file name: src/components/GameInfo.tsx
classname: N/A
function name: GameInfoProps (interface)
short description: Modified props to accept 'scores: Record<string, number>' and 'players: Record<string, Player>' instead of a single 'score'. Added 'solution' to GamePhase type.
input / output: N/A

file name: src/components/GameInfo.tsx
classname: N/A
function name: GameInfo (component)
short description: Updated component to receive 'scores' and 'players' props and display scores for all players.
input / output: N/A

file name: src/pages/GamePage.tsx
classname: N/A
function name: GamePage (component)
short description: Updated to import and use the modified GameInfo component in the right sidebar, passing 'game.playerStates' (mapped to scores) and 'currentRoom.players'.
input / output: N/A